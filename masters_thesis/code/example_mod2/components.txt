FUNCTION: foo
- COMPONENT:
    %n.addr = alloca i32, align 4
    %x = alloca i32, align 4
    store i32 %n, i32* %n.addr, align 4
    %0 = load i32, i32* %n.addr, align 4
    %add = add nsw i32 %0, 10
    store i32 %add, i32* %x, align 4
    %1 = load i32, i32* %x, align 4
    ret i32 %1

FUNCTION: qux
- COMPONENT:
    ret i32 42

FUNCTION: bar
- COMPONENT:
    %y = alloca i32, align 4
    %call = call i32 @qux()
    store i32 %call, i32* %y, align 4
    %0 = load i32, i32* %y, align 4
    ret i32 %0

FUNCTION: main
- COMPONENT:
    %retval = alloca i32, align 4
    store i32 0, i32* %retval, align 4
- COMPONENT:
    %some_int = alloca i32, align 4
    %foo_result = alloca i32, align 4
    store i32 10, i32* %some_int, align 4
    %0 = load i32, i32* %some_int, align 4
    %call = call i32 @foo(i32 %0)
    store i32 %call, i32* %foo_result, align 4
- COMPONENT:
    %n = alloca i32, align 4
    store i32 10, i32* %n, align 4
    %1 = load i32, i32* %n, align 4
    %cmp = icmp slt i32 %1, 42
    br i1 %cmp, label %if.then, label %if.end
- COMPONENT:
    %bar_result = alloca i32, align 4
    %call1 = call i32 @bar()
    store i32 %call1, i32* %bar_result, align 4
- COMPONENT:
    br label %if.end
- COMPONENT:
    ret i32 0

